name: Backend CI/CD Workflow

on:
  pull_request:
    paths:
      - "back/**"
    branches: [main, develop]
  push:
    paths:
      - "back/**"
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Create application.properties
        run: |
          echo "${{ secrets.APPLICATION }}" > ./back/src/main/resources/application.properties

      - name: Grant execute permission for gradlew
        run: chmod +x ./back/gradlew

      - name: Build without Test in Gradle
        run: ./gradlew build -x test
        working-directory: ./back

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: web-ide.jar
          path: back/build/libs/back-0.0.1-SNAPSHOT.jar

  deploy:
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: web-ide.jar
          path: ./back/

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./back
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/web-ide:latest

      - name: Zip the docker-compose file
        run: zip -j deployment ./back/docker-compose.yml

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.BACK_AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.BACK_AWS_SECRET_ACCESS_KEY }}
          application_name: OGJG
          environment_name: OGJG-env
          version_label: OGJG_Deploy-${{ github.SHA }}
          region: ${{ secrets.BACK_AWS_REGION }}
          deployment_package: deployment.zip
          use_existing_version_if_available: true
          wait_for_environment_recovery: 180